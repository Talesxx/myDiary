import{_ as s,c as a,o as l,ag as n}from"./chunks/framework.DUk-6-fP.js";const c=JSON.parse('{"title":"批量视频转音频工具","description":"","frontmatter":{},"headers":[],"relativePath":"music/README.md","filePath":"music/README.md"}'),e={name:"music/README.md"};function t(h,i,p,r,d,o){return l(),a("div",null,[...i[0]||(i[0]=[n(`<h1 id="批量视频转音频工具" tabindex="-1">批量视频转音频工具 <a class="header-anchor" href="#批量视频转音频工具" aria-label="Permalink to “批量视频转音频工具”">​</a></h1><p>这个目录包含两个版本的批量视频转音频脚本，可以将<code>video</code>目录中的所有视频文件提取音频并保存到<code>audio</code>目录。</p><h2 id="可用的脚本" tabindex="-1">可用的脚本 <a class="header-anchor" href="#可用的脚本" aria-label="Permalink to “可用的脚本”">​</a></h2><ol><li><strong>Python版本</strong>: <code>extract_audio.py</code></li><li><strong>Node.js版本</strong>: <code>extract_audio.js</code> (备选方案)</li></ol><h2 id="python版本使用说明" tabindex="-1">Python版本使用说明 <a class="header-anchor" href="#python版本使用说明" aria-label="Permalink to “Python版本使用说明”">​</a></h2><h3 id="依赖安装" tabindex="-1">依赖安装 <a class="header-anchor" href="#依赖安装" aria-label="Permalink to “依赖安装”">​</a></h3><ol><li><p><strong>安装Python</strong>:</p><ul><li>从 <a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer">Python官网</a> 下载并安装Python 3.7或更高版本</li><li>确保在安装过程中勾选&quot;Add Python to PATH&quot;</li></ul></li><li><p><strong>安装Python依赖</strong>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入脚本所在目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> d:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yWork</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">yDiary</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ocs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">usic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div></li><li><p><strong>安装FFmpeg</strong> (必须):</p><ul><li><strong>Windows</strong>: <ol><li>从 <a href="https://ffmpeg.org/download.html" target="_blank" rel="noreferrer">FFmpeg官网</a> 下载Windows版本</li><li>解压下载的文件</li><li>将解压目录中的<code>bin</code>文件夹添加到系统PATH环境变量</li></ol></li><li><strong>macOS</strong>: <code>brew install ffmpeg</code></li><li><strong>Linux</strong>: <code>sudo apt install ffmpeg</code> (Ubuntu/Debian) 或 <code>sudo dnf install ffmpeg</code> (Fedora)</li></ul></li></ol><h3 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to “使用方法”">​</a></h3><ol><li><p>将视频文件放入<code>video</code>目录</p></li><li><p>运行脚本:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 基本用法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义线程数 (提高处理速度)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threads</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义音频质量 (较低质量，较小文件)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quality</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义视频和输出目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --video-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your/video/path&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your/audio/path&quot;</span></span></code></pre></div></li></ol><h2 id="node-js版本使用说明" tabindex="-1">Node.js版本使用说明 <a class="header-anchor" href="#node-js版本使用说明" aria-label="Permalink to “Node.js版本使用说明”">​</a></h2><p>如果您的环境中已安装Node.js但没有Python，可以使用此版本。</p><h3 id="依赖安装-1" tabindex="-1">依赖安装 <a class="header-anchor" href="#依赖安装-1" aria-label="Permalink to “依赖安装”">​</a></h3><ol><li><p><strong>安装Node.js</strong>:</p><ul><li>从 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js官网</a> 下载并安装Node.js 12或更高版本</li></ul></li><li><p><strong>安装FFmpeg</strong> (必须):</p><ul><li>同上Python版本的FFmpeg安装步骤</li></ul></li></ol><h3 id="使用方法-1" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法-1" aria-label="Permalink to “使用方法”">​</a></h3><ol><li><p>将视频文件放入<code>video</code>目录</p></li><li><p>运行脚本:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 基本用法</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义线程数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threads</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义音频质量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --quality</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义视频和输出目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract_audio.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --video-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your/video/path&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output-dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your/audio/path&quot;</span></span></code></pre></div></li></ol><h2 id="功能特点" tabindex="-1">功能特点 <a class="header-anchor" href="#功能特点" aria-label="Permalink to “功能特点”">​</a></h2><ul><li>支持多种视频格式：mp4、avi、mov、wmv、flv、mkv、webm等</li><li>批量处理：自动扫描video目录中的所有视频文件</li><li>并行处理：多线程加速转换</li><li>可自定义音频质量：默认320kbps高品质MP3</li><li>详细的进度显示和结果统计</li><li>自动创建输出目录</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to “注意事项”">​</a></h2><ul><li>音频文件将以MP3格式输出，保留原视频文件名</li><li>处理大型视频文件可能需要较长时间，取决于您的计算机性能</li><li>确保有足够的磁盘空间存储生成的音频文件</li></ul><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to “故障排除”">​</a></h2><ul><li><strong>错误: 未找到FFmpeg</strong>: 请确保FFmpeg已正确安装并添加到系统PATH</li><li><strong>错误: 权限不足</strong>: 以管理员权限运行命令提示符或终端</li><li><strong>转换失败</strong>: 检查视频文件是否损坏或受DRM保护</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to “示例”">​</a></h2><p>假设您有以下视频文件在<code>video</code>目录中:</p><ul><li><code>video1.mp4</code></li><li><code>video2.mkv</code></li></ul><p>运行脚本后，您将在<code>audio</code>目录中得到:</p><ul><li><code>video1.mp3</code></li><li><code>video2.mp3</code></li></ul>`,26)])])}const g=s(e,[["render",t]]);export{c as __pageData,g as default};
