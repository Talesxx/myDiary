import{_ as p,I as h,c as k,o as d,ag as n,j as a,a as i,J as t,w as l}from"./chunks/framework.DUk-6-fP.js";const C=JSON.parse('{"title":"在npm包开发中如何快速联调","description":"","frontmatter":{},"headers":[],"relativePath":"web/2.npmPackage/fastJointDebug.md","filePath":"web/2.npmPackage/fastJointDebug.md"}'),r={name:"web/2.npmPackage/fastJointDebug.md"},o={id:"第二步-配置webpack-使得可以监听变更-如果你的项目是其他脚手架请参考你的脚手架配置",tabindex:"-1"},E={id:"特殊情况-对于使用了peerdependencies-对等依赖-的包使用一下教程",tabindex:"-1"},g={id:"特殊情况-对于使用了peerdependencies-对等依赖-可能会出现npm包和使用包的app的对等依赖安装的版本不同问题",tabindex:"-1"};function y(c,s,F,u,b,f){const e=h("font");return d(),k("div",null,[s[10]||(s[10]=n(`<h1 id="在npm包开发中如何快速联调" tabindex="-1">在npm包开发中如何快速联调 <a class="header-anchor" href="#在npm包开发中如何快速联调" aria-label="Permalink to “在npm包开发中如何快速联调”">​</a></h1><p><code>在包开发中，常常需要与使用的仓库进行联调以确定问题所在</code></p><h2 id="针对两独立仓库情况下" tabindex="-1">针对两独立仓库情况下 <a class="header-anchor" href="#针对两独立仓库情况下" aria-label="Permalink to “针对两独立仓库情况下”">​</a></h2><h3 id="对于无对等依赖的npm包" tabindex="-1">对于无对等依赖的npm包 <a class="header-anchor" href="#对于无对等依赖的npm包" aria-label="Permalink to “对于无对等依赖的npm包”">​</a></h3><p>使用以下操作进行</p><h4 id="第一步-软连接方式使用npm包" tabindex="-1">第一步 软连接方式使用npm包 <a class="header-anchor" href="#第一步-软连接方式使用npm包" aria-label="Permalink to “第一步 软连接方式使用npm包”">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D:\\path\\you-package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 在you-package包目录下运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">D:\\path\\you-app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">you-packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //在使用了you-package项目中运行</span></span></code></pre></div>`,7)),a("h4",o,[s[1]||(s[1]=i("第二步 配置webpack 使得可以监听变更",-1)),t(e,{style:{color:"#DF2A3F"}},{default:l(()=>[...s[0]||(s[0]=[i("（如果你的项目是其他脚手架请参考你的脚手架配置）",-1)])]),_:1}),s[2]||(s[2]=i()),s[3]||(s[3]=a("a",{class:"header-anchor",href:"#第二步-配置webpack-使得可以监听变更-如果你的项目是其他脚手架请参考你的脚手架配置","aria-label":"Permalink to “第二步 配置webpack 使得可以监听变更（如果你的项目是其他脚手架请参考你的脚手架配置）”"},"​",-1))]),s[11]||(s[11]=n(`<p>这种方式可以让你在dev模式下监听 npm包内容变更时自动重新编译</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  webpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">webpackConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modifiedConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webpackConfig;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (modifiedConfig.watchOptions) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      modifiedConfig.watchOptions.ignored </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/node_modules/(?!you-package)/**&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;**/.git/**&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modifiedConfig;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span></code></pre></div>`,2)),a("h3",E,[t(e,{style:{color:"#DF2A3F"}},{default:l(()=>[...s[4]||(s[4]=[i("特殊情况",-1)])]),_:1}),s[5]||(s[5]=i(" 对于使用了peerDependencies（对等依赖）的包使用一下教程 ",-1)),s[6]||(s[6]=a("a",{class:"header-anchor",href:"#特殊情况-对于使用了peerdependencies-对等依赖-的包使用一下教程","aria-label":"Permalink to “特殊情况 对于使用了peerDependencies（对等依赖）的包使用一下教程”"},"​",-1))]),s[12]||(s[12]=n(`<p>以you-package为例，本文介绍如何在you-app工程通过硬链接的方式联编you-package</p><h4 id="修改包的依赖方式-或者手动修改对应依赖格式为-file-xxx-xx" tabindex="-1">修改包的依赖方式(或者手动修改对应依赖格式为 file:xxx/xx) <a class="header-anchor" href="#修改包的依赖方式-或者手动修改对应依赖格式为-file-xxx-xx" aria-label="Permalink to “修改包的依赖方式(或者手动修改对应依赖格式为 file:xxx/xx)”">​</a></h4><p>在package.json中修改对应依赖</p><div class="language-json5"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;you-package&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;file:xxx/xx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以是相对也，可以是绝对路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="删除node-modules-使用pnpm-i安装依赖" tabindex="-1">删除node_modules 使用pnpm i安装依赖 <a class="header-anchor" href="#删除node-modules-使用pnpm-i安装依赖" aria-label="Permalink to “删除node_modules 使用pnpm i安装依赖”">​</a></h4><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /node_modules</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><h4 id="同理-配置webpack-使得可以监听变更-同上" tabindex="-1">同理 配置webpack 使得可以监听变更 同上 <a class="header-anchor" href="#同理-配置webpack-使得可以监听变更-同上" aria-label="Permalink to “同理 配置webpack 使得可以监听变更 同上”">​</a></h4><h2 id="在monorepo中使用-workspace-使用pnpm" tabindex="-1">在Monorepo中使用 workspace:* （使用pnpm） <a class="header-anchor" href="#在monorepo中使用-workspace-使用pnpm" aria-label="Permalink to “在Monorepo中使用 workspace:* （使用pnpm）”">​</a></h2><div class="language-json5"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // root/apps/you-app/package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;you-package&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;workspace:*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9)),a("h4",g,[t(e,{style:{color:"#DF2A3F"}},{default:l(()=>[...s[7]||(s[7]=[i("特殊情况",-1)])]),_:1}),s[8]||(s[8]=i(" 对于使用了peerDependencies（对等依赖）可能会出现npm包和使用包的app的对等依赖安装的版本不同问题 ",-1)),s[9]||(s[9]=a("a",{class:"header-anchor",href:"#特殊情况-对于使用了peerdependencies-对等依赖-可能会出现npm包和使用包的app的对等依赖安装的版本不同问题","aria-label":"Permalink to “特殊情况 对于使用了peerDependencies（对等依赖）可能会出现npm包和使用包的app的对等依赖安装的版本不同问题”"},"​",-1))]),s[13]||(s[13]=n(`<p>使用依赖覆盖方式解决</p><div class="language-json5"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // root/package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;monorepo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...其他依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;pnpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;overrides&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          &quot;lodash&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;4.18.0&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> //</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> 比如说lodash是npm包的对等依赖</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">          //</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;18.2.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><h4 id="同理-配置webpack-使得可以监听变更-同上-1" tabindex="-1">同理 配置webpack 使得可以监听变更 同上 <a class="header-anchor" href="#同理-配置webpack-使得可以监听变更-同上-1" aria-label="Permalink to “同理 配置webpack 使得可以监听变更 同上”">​</a></h4>`,3))])}const D=p(r,[["render",y]]);export{C as __pageData,D as default};
